
=============================================================================================================================
//~Обчислювальні (computed) властивості в JavaScript дозволяють вам динамічно визначати імена властивостей об'єкта під час його створення.
//~ Це корисно, коли ви хочете використовувати змінні або обчислювальні вирази для визначення імен властивостей.
//~Синтаксис обчислювальних властивостей виглядає так:

// Синтаксис обчислювальних властивостей
const obj = {
  [вираз]: значення,
  // або
  [вираз_для_імені_властивості](): {
    // ...
  }
};

// Приклади
const propertyName = 'dynamicProperty';
const obj1 = {
  [propertyName]: 'Значення для динамічної властивості',
};

console.log(obj1.dynamicProperty); // Виведе: Значення для динамічної властивості

// Використання функції для обчислення імені методу
const methodName = 'dynamicMethod';
const obj2 = {
  [methodName + 'WithSuffix']() {
    console.log('Виклик динамічного методу');
  },
};

obj2.dynamicMethodWithSuffix(); // Виведе: Виклик динамічного методу

=============================================================================================================================


//!====================  Перебір об'єкта, Цикл for...in, Метод Object.keys(), Object.values()  =============================================

//Перебери об'єкт apartment, використовуючи метод Object.keys() і цикл for...of.
//Запиши у змінну keys масив ключів властивостей об'єкта apartment,і додай в масив values всі значення його властивостей.

const apartment = {
  descr: "Spacious apartment in the city center",
  rating: 4,
  price: 2153,
};
const values = [];
/*Використовуємо Object.keys() для отримання масиву ключів властивостей об'єкта*/
const keys = Object.keys(apartment);
/*Цикл for...of для перебору масиву ключів*/
for (const key of keys) {
  /*Додаємо значення кожної властивості до масиву values*/
  values.push(apartment[key]);
}
=======================================
//Виконай рефакторинг функції countProps(object), замінивши перебір ключів за допомогою циклу for…in на метод Object.keys()
//для отримання масиву властивостей.
//Функція має повернути кількість властивостей в об'єкті object.

function countProps(object) {
  let propCount = 0;

  for (const key in object) {
    if (object.hasOwnProperty(key)) {
      propCount += 1;
    }
  }
  return propCount;
}

// РЕШЕНИЕ !
function countProps(object) {
  const keys = Object.keys(object);
  return keys.length;
}
=====================================
//Запиши у змінну keys масив ключів властивостей об'єкта apartment, а у змінну values - масив їх значень.
//Використовуй методи Object.keys() і Object.values().
const apartment = {
  descr: "Spacious apartment in the city center",
  rating: 4,
  price: 2153,
};

const keys = Object.keys(apartment);;
const values = Object.values(apartment);
=======================================

//!=======================  Object.values()  ==============================================================================

//Функція countTotalSalary(salaries) приймає об'єкт зарплат (salaries) в якості параметра.
// Кожна властивість об'єкта salaries — це ключ, що містить ім'я співробітника, та значення - його відповідна зарплатня.
//Доповни код функції countTotalSalary(salaries) так, щоб вона повертала загальну суму зарплат всіх співробітників.
//Поради:
//Ініціалізуй змінну totalSalary зі значенням 0, яка буде відповідати за загальну суму зарплат усіх співробітників
//Використай метод Object.values() для отримання значень (зарплат) з об'єкта salaries
//Пройдись по отриманих значеннях за допомогою циклу та додай кожне значення до змінної totalSalary.
//Поверни totalSalary як результат

function countTotalSalary(salaries) {
  let totalSalary = 0;
  const values = Object.values(salaries);
   for (const salary of values) {
    totalSalary += salary;
  }
    return totalSalary;
}
//! 1 - Ініціалізація змінної totalSalary: Спочатку ми створюємо змінну totalSalary і присвоюємо їй значення 0.
//Ця змінна буде відповідати за загальну суму зарплат усіх співробітників.

//! 2 - const values(Object.values(salaries) Отримання масиву значень з об’єкта (salaries): Ми використовуємо метод Object.values(salaries),
// щоб отримати масив всіх значень (зарплат) з об’єкта salaries. Це допомагає нам отримати доступ до зарплат кожного співробітника.
// Цей метод приймає об'єкт як аргумент і повертає масив його значень (значення властивостей об'єкта).
//salaries - це об'єкт, який містить ім'я співробітника як ключ та відповідну зарплату як значення.
//Object.values(salaries) - Метод, який приймає об'єкт (salaries) і повертає масив його значень (в даному випадку, масив зарплат).

//! 3 - (for (const salary of values)
//salary: Це масив, який ми отримали за допомогою методу Object.values(salaries). У нашому випадку, це масив зарплат співробітників.
//for...of: Це спеціальна структура циклу , яка призначена для ітерації через значення масиву (або іншої ітерабельної структури).
//const salary of values: Цей синтаксис означає, що для кожного елемента (salary) в масиві (values) буде виконано наступний блок коду.
//totalSalary += salary; - Кожне значення (salary) додається до змінної totalSalary
//Отже, кожна ітерація циклу додає зарплату кожного співробітника до загальної суми (totalSalary).
// Після завершення циклу ми отримуємо суму всіх зарплат, яка зберігається в змінній totalSalary.
//
========================================

//! ======================================= Масив об’єктів ===============================================================================
//Масив colors містить колекцію кольорів. Кожен колір представлений об'єктом і має властивості hex і rgb
// з відповідними для цього формату і кольору значеннями.
//Перебери масив об'єктів colors, використовуючи цикл for...of.
//Додай у масив hexColors значення властивостей hex, а в масив rgbColors - значення властивостей rgb з усіх об'єктів масиву colors.

const colors = [
  { hex: "#f44336", rgb: "244,67,54" },
  { hex: "#2196f3", rgb: "33,150,243" },
  { hex: "#4caf50", rgb: "76,175,80" },
  { hex: "#ffeb3b", rgb: "255,235,59" },
];

const hexColors = [];
const rgbColors = [];

// Перебір масиву об'єктів colors за допомогою циклу for...of/
//Щоб заповнити масиви hexColors і rgbColors значеннями кольорів з масиву colors,

//Цей код пройде крізь кожен об'єкт у масиві colors, витягне значення hex та rgb і додасть їх до відповідних масивів hexColors та rgbColors.
//Результатом буде вивід двох масивів, які містять значення кольорів у форматах HEX та RGB.

 for (const color of colors) {
   // Додавання значень до відповідних масивів
    hexColors.push(color.hex);
    // Додавання значення властивості до масиву rgbColors
    rgbColors.push(color.rgb);
  }
  =========================================
